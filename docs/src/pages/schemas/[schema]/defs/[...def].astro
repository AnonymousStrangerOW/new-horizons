---
import { readdir } from "fs/promises";
import Content from "../../../../components/Schemas/Content.astro";
import MainLayout from "../../../../layouts/MainLayout.astro";
import { Schema, SchemaTools } from "../../../../schema_utils";
import Breadcrumb from "../../../../components/Schemas/Breadcrumb.astro";

export interface Props {
    def: Schema;
}

export async function getStaticPaths() {
    const schemaFiles = await readdir("../NewHorizons/Schemas");
    const schemas = schemaFiles.map((f) => SchemaTools.readSchema(f));

    let allDefs: Schema[] = [];

    for (const schema of schemas) {
        allDefs = allDefs.concat(SchemaTools.getDefs(schema));
    }

    return allDefs.map((def) => {
        return {
            params: {
                schema: def.rootSlug,
                def: def.slug
            },
            props: {
                def
            }
        };
    });
}

const { def } = Astro.props;

const title = SchemaTools.getTitle(def)?.toString();
const headings = SchemaTools.getHeaders(def);
---

<MainLayout
    noFileEdit
    lang="en-us"
    dir="ltr"
    headings={headings}
    title={title ?? "??"}
    description={""}
>
    <Breadcrumb schema={def} />
    <Content level={0} schema={def} isDef />
</MainLayout>
